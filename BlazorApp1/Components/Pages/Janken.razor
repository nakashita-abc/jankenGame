@page "/Janken"

@* 動的な動きを可能にする *@
@rendermode @(new InteractiveServerRenderMode(prerender:false))
@inject Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage.ProtectedSessionStorage storage
@using BlazorApp1.Entities

<PageTitle>じゃんけんGAME</PageTitle>

@if (!refMode)
{
    <h1>じゃんけんゲーム</h1>
    <p>@DateTime.Now</p>

    @* bootstrap使用 *@
    <p>
        <div class="btn-group" role="group" aria-label="Basic mixed styles example">
            <button type="button" class="btn btn-danger" @onclick="() => jankenStart(1)">グー</button>
            <button type="button" class="btn btn-warning" @onclick="() => jankenStart(2)">チョキ</button>
            <button type="button" class="btn btn-success" @onclick="() => jankenStart(3)">パー</button>
        </div>
    </p>
    @if (result != null)
    {
        <table>
            <tr>
                <td><h3>私の出す手は・・・</h3></td>
                <td>
                    @if (result.ComputerNumName.Equals("グー"))
                    {
                        <button type="button" class="btn btn-danger" style="border-radius:10px" disabled>@result.ComputerNumName</button>
                    }
                    else if (result.ComputerNumName.Equals("チョキ"))
                    {
                        <button type="button" class="btn btn-warning" style="border-radius:10px" disabled>@result.ComputerNumName</button>
                    }
                    else if (result.ComputerNumName.Equals("パー"))
                    {
                        <button type="button" class="btn btn-success" style="border-radius:10px" disabled>@result.ComputerNumName</button>
                    }
                </td>
            </tr>
        </table>
        <br />


        @if (result.ResultMessage.Equals("WIN！！！"))
        {
            <h1 style="color:red">@result.ResultMessage</h1>
        }
        else if (result.ResultMessage.Equals("LOSE…"))
        {
            <h1 style="color:blue">@result.ResultMessage</h1>
        }
        else
        {
            <h1 style="color:deeppink">@result.ResultMessage</h1>
        }
        <br />
        <br />
    }
    <button type="button" class="btn btn-dark" style="border-radius:100%" onclick="@onRefClick">成績参照</button>
    <button type="button" class="btn btn-dark" style="border-radius:100%" onclick="@onResetClick">リセット</button>

}
else if (refMode)
{
    <h3>参照モード！</h3>

    <h3>あなたの成績は・・・</h3>
    <br />
    <h1>@(gameCount)試合中<span style="color:orangered">@(winCount)</span>勝です！！(勝率@(winPercent)％)</h1>
    <button type="button" class="btn btn-warning" onclick="@onBackClick">戻る</button>
}



@code{
    //参照画面に遷移するかどうか
    private Boolean refMode = false;

    //総回数
    private int gameCount = 0;
    //クライアントの勝利回数
    private int winCount = 0;
    //勝率
    int winPercent=0;
    //結果オブジェクト
    JankenResult? result;
    //結果リスト
    List<JankenResult> resultList = new List<JankenResult>();

    protected override async Task OnInitializedAsync()
    {
        //試合数
        var storageGameCount = await storage.GetAsync<int>("gameCount");
        if (storageGameCount.Success)
        {
            this.gameCount = storageGameCount.Value;
        }

        //勝利数
        var storageWinCount = await storage.GetAsync<int>("winCount");
        if (storageWinCount.Success)
        {
            this.winCount = storageWinCount.Value;
        }
    }

    private async Task onResetClick()
    {
        winPercent = 0;
        await storage.SetAsync("winCount", winCount=0);
        await storage.SetAsync("gameCount", gameCount=0);
    }

    private async Task jankenStart(int jankenNumber)
    {
        result = JankenData.Execute(jankenNumber);

        //todo:ストレージにwinカウント保存
        if (result.resultFlg == 1)
        {
            await storage.SetAsync("winCount", winCount+=1);
        }

        //試合回数カウント
        // gameCount += 1;
        await storage.SetAsync("gameCount", gameCount+=1);
    }


    private void onRefClick()
    {
        if (gameCount != 0)
        {
            winPercent = (winCount*100 / gameCount);
        }
        
        this.refMode = true;
    }

    private void onBackClick()
    {
        this.refMode = false;
    }
}